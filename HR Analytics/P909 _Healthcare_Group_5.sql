CREATE DATABASE PROJECT2;
USE PROJECT2;

-- 10 KPIS:-
-- --------------------------------------
SELECT
  (SELECT COUNT(PATIENT_ID) FROM PATIENT) AS TOTAL_PATIENTS,
  (SELECT COUNT(DOCTOR_ID) FROM DOCTOR) AS TOTAL_DOCTORS,
  (SELECT COUNT(VISIT_ID) FROM VISIT) AS TOTAL_VISITS,
  (SELECT ROUND(AVG(AGE)) FROM PATIENT) AS AVG_AGE_OF_PATIENTS,
  (SELECT CONCAT(ROUND((SUM(CASE WHEN FOLLOW_UP_REQUIRED1 = 'YES' THEN 1 ELSE 0 END) * 100.0 / 
          COUNT(VISIT_ID)), 2), '%') FROM VISIT) AS FOLLOW_UP_RATE,
  (SELECT ROUND(AVG(COST), 2) FROM TREATMENT) AS TREATMENT_COST_PER_VISIT,
  (SELECT COUNT(LAB_RESULT_ID) FROM LAB) AS TOTAL_LAB_TESTS_CONDUCTED,
  (SELECT CONCAT(ROUND((SUM(CASE WHEN RESULT = 'ABNORMAL' THEN 1 ELSE 0 END) * 100.0 / 
          COUNT(LAB_RESULT_ID)), 2), '%') FROM LAB) AS PERCENTAGE_OF_ABNORMAL_LAB_RESULTS,
  (SELECT ROUND(COUNT(VISIT.VISIT_ID) * 1.0 / COUNT(DISTINCT DOCTOR.DOCTOR_ID)) 
     FROM VISIT JOIN DOCTOR ON VISIT.DOCTOR_ID = DOCTOR.DOCTOR_ID) AS DOCTOR_WORKLOAD,
  (SELECT CONCAT(ROUND((SUM(COST)/1000000),2), ' M') FROM TREATMENT) AS TOTAL_REVENUE;
  
-- 10 VISUALS:-
-- -------------------------------------------------------------------------------------
-- 11. TOP 5 DIAGNOSED CONDITIONS
SELECT DIAGNOSIS,COUNT(*) AS VISITS
FROM VISIT
GROUP BY DIAGNOSIS
ORDER BY COUNT(*) DESC;

-- 12. AGE GROUP WISE PATIENTS
SELECT 
CASE WHEN Age >= 0 AND Age <= 18 THEN "0–18"
WHEN Age <= 30 THEN "19–30"
WHEN Age <= 45 THEN "31–45"
WHEN Age <= 60 THEN "46–60"
WHEN Age <= 75 THEN "61–75"
ELSE "76+"
END AS AGE_GROUP, COUNT(*) AS PATIENTS
FROM PATIENT
GROUP BY AGE_GROUP
ORDER BY AGE_GROUP;

-- 13. STATE WISE PATIENTS
SELECT STATE,COUNT(*) AS PATIENTS
FROM PATIENT
GROUP BY STATE
ORDER BY PATIENTS DESC;

-- 14. MONTH WISE VISITS
SELECT 
  DATE_FORMAT(STR_TO_DATE(VISIT_DATE, '%m/%d/%Y'), '%M') AS MonthName,
  MONTH(STR_TO_DATE(VISIT_DATE, '%m/%d/%Y')) AS MonthNumber,
  COUNT(*) AS VisitCount
FROM VISIT
GROUP BY MonthName, MonthNumber
ORDER BY MonthNumber;

-- 15.SPECIALIZATION WISE DOCTORS
SELECT SPECIALIZATION, COUNT(*) AS DOCTORS
FROM DOCTOR
GROUP BY SPECIALIZATION
ORDER BY DOCTORS DESC;

-- 16.YEAR WISE REVENUE
SELECT 
YEAR(STR_TO_DATE(VISIT_DATE,'%m/%d/%Y')) AS YEAR, 
CONCAT(ROUND((SUM(COST)/1000000),2), ' M') AS COST
FROM VISIT V JOIN TREATMENT T 
ON V.VISIT_ID=T.VISIT_ID
GROUP BY YEAR
ORDER BY YEAR;

-- 17. GENDER WISE VISITS
SELECT P1.GENDER,COUNT(*) AS VISITS
FROM PATIENT P1 JOIN VISIT V1
ON P1.PATIENT_ID=V1.PATIENT_ID
GROUP BY GENDER
ORDER BY VISITS DESC;

-- 18. VISIT_TYPE WISE VISITS
SELECT VISIT_TYPE,COUNT(*) AS VISITS
FROM VISIT
GROUP BY VISIT_TYPE
ORDER BY VISITS DESC;

-- 19. TREATMENT NAME WISE COST
SELECT TREATMENT_NAME, CONCAT(ROUND(SUM(COST)/1000000,2),' M') AS COST
FROM TREATMENT
GROUP BY TREATMENT_NAME
ORDER BY COST DESC;

-- 20. RESULT WISE VISITS
SELECT RESULT,TEST_NAME,COUNT(*) AS VISITS
FROM LAB
GROUP BY RESULT,TEST_NAME
ORDER BY RESULT;

-- 21. BLOOD TYPE WISE PATIENTS
SELECT BLOOD_TYPE, COUNT(*) AS PATIENTS
FROM PATIENT
GROUP BY BLOOD_TYPE
ORDER BY PATIENTS DESC;

-- STORED PROCEDURES USED AS FILTERS:-
-- -----------------------------------------------------------
-- 1. STORED PROCEDURE MONTH WISE VISITS
DELIMITER //
CREATE PROCEDURE VISITS(IN INPUT_MONTH VARCHAR(20))
BEGIN
SELECT 
  DATE_FORMAT(STR_TO_DATE(VISIT_DATE, '%m/%d/%Y'), '%M') AS MonthName,
  MONTH(STR_TO_DATE(VISIT_DATE, '%m/%d/%Y')) AS MonthNumber,
  COUNT(*) AS VisitCount
FROM VISIT
WHERE DATE_FORMAT(STR_TO_DATE(VISIT_DATE,'%m/%d/%Y'), '%M')= INPUT_MONTH
GROUP BY MonthName, MonthNumber;
END //
DELIMITER ;

CALL VISITS('MARCH');

-- 2. STORED PROCEDURE YEAR WISE COST
DELIMITER //
CREATE PROCEDURE COST(IN INPUT_YEAR INT)
BEGIN 
SELECT 
YEAR(STR_TO_DATE(VISIT_DATE,'%m/%d/%Y')) AS YEAR, 
CONCAT(ROUND(SUM(COST)/1000000,2),' M') AS COST
FROM VISIT V JOIN TREATMENT T 
ON V.VISIT_ID=T.VISIT_ID
WHERE YEAR(STR_TO_DATE(VISIT_DATE,'%m/%d/%Y'))=INPUT_YEAR
GROUP BY YEAR;
END //
DELIMITER ;

CALL COST(2024);

-- 10 KPI CARDS:-
-- -----------------------------------------------------------------
-- 1. TOTAL PATIENTS
SELECT COUNT(PATIENT_ID) AS TOTAL_PATIENTS
FROM PATIENT;

-- 2. TOTAL DOCTORS
SELECT COUNT(DOCTOR_ID) AS TOTAL_DOCTORS
FROM DOCTOR;

-- 3. TOTAL VISITS
SELECT COUNT(VISIT_ID) AS TOTAL_VISITS
FROM VISIT;

-- 4.AVERAGE AGE OF PATIENTS
SELECT ROUND(AVG(AGE)) AS AVG_AGE_OF_PATIENTS
FROM PATIENT;

-- 5. FOLLOW-UP-RATE
SELECT CONCAT(ROUND((SUM(CASE WHEN FOLLOW_UP_REQUIRED1 = 'YES' THEN 1 ELSE 0 END) / 
(COUNT(VISIT_ID))*100), 2), '%') AS FOLLOW_UP_RATE
FROM visit;

-- 6. TREATMENT COST PER VISIT
SELECT ROUND(AVG(COST), 2) AS TREATMENT_COST_PER_VISIT
FROM TREATMENT;

-- 7. TOTAL LAB TESTS CONDUCTED
SELECT COUNT(LAB_RESULT_ID) AS TOTAL_LAB_TESTS_CONDUCTED
FROM LAB;

-- 8. % OF ABNORMAL LAB RESULTS
SELECT CONCAT(ROUND((SUM(CASE WHEN RESULT = 'ABNORMAL' THEN 1 ELSE 0 END)/
(COUNT(LAB_RESULT_ID))*100),2),'%') AS PERCENTAGE_OF_ABNORMAL_LAB_RESULTS
FROM LAB;

-- 9. DOCTOR WORKLOAD
SELECT ROUND(COUNT(VISIT.VISIT_ID)/COUNT(DISTINCT DOCTOR.DOCTOR_ID)) AS DOCTOR_WORKLOAD
FROM VISIT JOIN DOCTOR
ON VISIT.DOCTOR_ID = DOCTOR.DOCTOR_ID;

-- 10. TOTAL REVENUE
SELECT CONCAT(ROUND((SUM(COST)/1000000),2),' M') AS TOTAL_REVENUE
FROM TREATMENT;


select distinct year(str_to_date(test_date,'%m/%d/%Y')) from lab;

select `Hospital Affiliation` from doctor;
select distinct Chronic_Conditions from patient;
select distinct insurance_provider from patient;



